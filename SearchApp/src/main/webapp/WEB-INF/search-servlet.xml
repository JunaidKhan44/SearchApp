<?xml version='1.0' encoding='UTF-8' ?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/mvc
     http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    
    <!-- incase of add resources like images js css  add namespace in bean parent-->
     
     	<tx:annotation-driven/>

     <!-- mvc spring resource  and enable it by adding annotation driven-->
     <mvc:annotation-driven/>
     <mvc:resources location="/WEB-INF/resources/" mapping="/resources/**"/>
     
     <!-- scan all internal controller -->
     <context:component-scan base-package="searchapp"></context:component-scan>
	
	<!-- view resolver -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" name="viewResolver">
	
		<property name="prefix"  value="/WEB-INF/views/"></property>
		<property name="suffix"  value=".jsp"></property>	
		
	</bean>


	<!-- configuring new resolver for multipart common file 
	u can also set other property like maxfileupload size etc-->
	<bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>


        <!-- hibernate template -->
	<bean class="org.springframework.orm.hibernate5.HibernateTemplate"
		name="hibernateTemplate">
		<property name="sessionFactory" ref="factory"></property>
	</bean>

	<!-- session factory -->
 	<bean id="sessionFactory" 
      class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
      name="factory">
    
        <property name="dataSource" 
          ref="ds"/>
        
        <property name="hibernateProperties">
            <props>
             <!-- in case of creating database use this configuration -->
                <!-- <prop key="hibernate.hbm2ddl.auto">
                    create-drop
                </prop> -->
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQL57Dialect
                </prop>
                <prop key="hibernate.show_sql">
                    true
                </prop><prop key="hibernate.hbm2ddl.auto">
                    update
                </prop>
            </props>
        </property>
        
        <property name="annotatedClasses">
            <list>
            <value>
            searchapp.model.Student
            </value>
            </list>
        </property>
        
    </bean>

	
    <bean id="dataSource" 
      class="org.springframework.jdbc.datasource.DriverManagerDataSource"
      name="ds">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        
        <!-- if database already exist use this configuration -->
        <property name="url" value="jdbc:mysql://localhost:3306/springjdbc"/>
        
        <!-- in case u want a create database then use this -->
        <!-- <property name="url" value="jdbc:mysql://localhost:3306/springjdbc?createDatabaseIfNotExist=true"/>
         -->
        <property name="username" value="root"/>
        <property name="password" value="****"/>
   </bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="factory" />
	</bean>

	<!-- interceptor configuration -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/welcome" />
			<bean class="searchapp.interceptor.MyInterceptor"></bean>
		</mvc:interceptor>

	</mvc:interceptors>
	


</beans>
